{"version":3,"sources":["assets/camera.svg","assets/logo.svg","services/api.js","pages/Login/index.js","pages/Dashboard/index.js","pages/NewSpot/index.js","routes.js","App.js","index.js"],"names":["module","exports","api","axios","create","baseURL","Login","history","useState","email","setEmail","event","a","preventDefault","post","response","_id","data","localStorage","setItem","push","onSubmit","htmlFor","id","type","placeholder","onChange","target","value","className","Dashboard","user","setUser","spots","setSpots","useEffect","user_id","getItem","get","headers","console","log","success","loadSpots","map","spot","key","style","backgroundImage","thumbnail_url","company","price","to","NewSpot","setCompany","techs","setTechs","setPrice","thumbnail","setThumbnail","preview","useMemo","URL","createObjectURL","FormData","append","files","src","camera","alt","Routes","path","exact","component","App","logo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a3c7597d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/camera.234a4ab9.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.91c62ad4.svg\";","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://aircnc-meme.herokuapp.com/',\r\n});\r\n\r\nexport default api;","import React, { useState } from 'react';\r\nimport api from '../../services/api';\r\n\r\nexport default function Login({ history }) {\r\n\r\n    //Set email atualiza o valor da variavel\r\n    //Real-time\r\n    const [email, setEmail] = useState('');\r\n\r\n    //Função responsável por enviar o submit\r\n    async function handleSubmit(event) {\r\n        //Não faça seu padrão de enviar pra outra tela\r\n        event.preventDefault();\r\n\r\n        const response = await api.post('/session', { email: email });\r\n        const { _id } = response.data;\r\n\r\n        localStorage.setItem('user', _id);\r\n        //Setando email para exibir na dashboard\r\n        localStorage.setItem('email', email);\r\n\r\n        //History serve para fazer a navegação\r\n        history.push('/dashboard');\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <p>\r\n                Ofereça <strong>spots</strong> para programadores e encontre <strong>talentos</strong> para a sua empresa\r\n            </p>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"email\">E-mail:</label>\r\n                <input\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Seu melhor e-mail\"\r\n                    onChange={event => setEmail(event.target.value)}\r\n                />\r\n                <button className=\"btn\" type=\"submit\">Entrar</button>\r\n            </form>\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport api from '../../services/api';\r\n\r\n//CSS\r\nimport './styles.css';\r\n\r\nexport default function Dashboard(){\r\n    const [ user, setUser ] = useState('')\r\n    const [ spots, setSpots ] = useState([]);\r\n\r\n    useEffect(\r\n        ()=>{\r\n            async function loadSpots(){\r\n                const user_id = localStorage.getItem('user');\r\n                const response = await api.get('/dashboard',{\r\n                    headers:{\r\n                        user_id: user_id\r\n                    }\r\n                });\r\n\r\n                console.log(response.data.success);\r\n                //Passando os resultados para os spots\r\n                setSpots(response.data.success);\r\n                //Buscando e setando email\r\n                setUser(localStorage.getItem('email'));\r\n            }\r\n            loadSpots();\r\n        },[]);\r\n\r\n    return (\r\n        <>\r\n            {/* Exibindo email */}\r\n            <p>{user}</p>\r\n            <ul className=\"spot-list\">\r\n                {/* Percorrendo todos os spots e em cada um deles executando e retornando os valores abaixo */}\r\n                {spots.map(spot => (\r\n                    <li key={spot._id}>\r\n                        <header style={{\r\n                            backgroundImage: `url(${spot.thumbnail_url})`\r\n                        }}></header>\r\n                        <strong> {spot.company} </strong>\r\n                        {/* Exemplo de Operador Ternário do PHP, formatando o valor para real */}\r\n                        <span> {spot.price ? `R$ ${spot.price},00/dia` : 'GRATUITO'} </span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <Link to='/new-spot'>\r\n                <button className=\"btn\">Cadastrar Novo Spot</button>\r\n            </Link>\r\n        </>\r\n    );\r\n}","import React, { useState, useMemo } from 'react';\r\nimport api from '../../services/api';\r\n\r\n//useMemo é um refresh a cada coisa que é atualizada ele da um reload em todo o component\r\n\r\n//CSS\r\nimport './styles.css';\r\nimport camera from '../../assets/camera.svg';\r\n\r\nexport default function NewSpot({ history }){\r\n\r\n    const [company, setCompany ] = useState('');\r\n    const [techs, setTechs ] = useState('');\r\n    const [price, setPrice ] = useState('');\r\n    const [ thumbnail, setThumbnail ] = useState(null);\r\n\r\n    const preview = useMemo(\r\n        ()=>{\r\n            return thumbnail ? URL.createObjectURL(thumbnail) : null;\r\n        },\r\n        [thumbnail]\r\n    );\r\n\r\n    async function handleSubmit(event){\r\n        event.preventDefault();\r\n        const data = new FormData();\r\n        const user_id = localStorage.getItem('user');\r\n\r\n        data.append('thumbnail', thumbnail);\r\n        data.append('company', company);\r\n        data.append('techs', techs);\r\n        data.append('price', price);\r\n\r\n        await api.post('/spots', data, {\r\n            headers: { user_id }\r\n        });\r\n\r\n        history.push('/dashboard');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <label \r\n                id=\"thumbnail\" \r\n                style={{backgroundImage: `url(${preview})`}}\r\n                className={thumbnail ? 'has-thumbnail' : ''}\r\n                >\r\n                    <input type=\"file\" onChange={event => setThumbnail(event.target.files[0])} />\r\n                    <img src={camera} alt=\"Select img\" />\r\n                </label>\r\n\r\n                <label htmlFor=\"company\">Empresa:</label>\r\n                <input\r\n                    id=\"company\"\r\n                    placeholder=\"Sua empresa incrível\"\r\n                    value={company}\r\n                    onChange={event => setCompany(event.target.value)}\r\n                />\r\n\r\n                <label htmlFor=\"techs\">Tecnologias: <span>(separadas por vírgula)</span></label>\r\n                <input\r\n                    id=\"techs\"\r\n                    placeholder=\"Tecnologias da empresa\"\r\n                    value={techs}\r\n                    onChange={event => setTechs(event.target.value)}\r\n                />\r\n\r\n                <label htmlFor=\"price\">Diária:</label>\r\n                <input\r\n                    id=\"price\"\r\n                    placeholder=\"Valor diário\"\r\n                    value={price}\r\n                    onChange={event => setPrice(event.target.value)}\r\n                />\r\n\r\n                <button className=\"btn\">Cadastrar</button>\r\n\r\n            </form>\r\n        </>\r\n    );\r\n}","import { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nimport Login from './pages/Login';\r\nimport Dashboard from './pages/Dashboard';\r\nimport NewSpot from './pages/NewSpot';\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path='/' exact component={Login} />\r\n                <Route path='/dashboard' component={Dashboard}/>\r\n                <Route path='/new-spot' component={NewSpot}/>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Routes from './routes';\r\n\r\nimport logo from './assets/logo.svg';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <img src={logo} alt=\"Logo do AirCNC\" />\r\n      <div className=\"content\">\r\n        <Routes />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}